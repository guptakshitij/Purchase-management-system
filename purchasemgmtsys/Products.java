package purchasemgmtsys;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Swarnim
 */
public class Products extends javax.swing.JFrame {

    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        h = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Products Category"));

        jButton2.setText("Sports");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Electronics");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Furniture");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Stationary");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Clothes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Hardware parts");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton10.setText("Utilities");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Show all Products");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton11)
                .addGap(77, 77, 77))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Unity price", "Product name", "Product id", "Category id"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        h.setText("HOME");
        h.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(h)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(h))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='sports' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id=result.getString("category_id");
                    String unity_price = result.getString("unity_price");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='electronics' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='furniture' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='stationary' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='clothes' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='hardware parts' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT product.* FROM product,product_category where product_category.category_name='utilities' AND product.category_id=product_category.category_id ;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
Connection conn1;
conn1 = null;
try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/project";
            String user = "root";
            String password = "";
            conn1 = DriverManager.getConnection(url1, user, password);
            
        } catch (SQLException ex) {
            
        }
System.out.println("Connection Successfuly Estabilished");
try{
            if (conn1 != null) {
                //System.out.println("Connected to the database test1");
                String sql = "SELECT * FROM product;";
                Statement statement = conn1.createStatement();
                ResultSet result = statement.executeQuery(sql);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                while (result.next())
                {
                    String unity_price = result.getString("unity_price");
                    String product_name= result.getString("product_name");
                    String product_id= result.getString("product_id");
                    String category_id= result.getString("category_id");
                    jTable1.setVisible(true);
                    
                    model.addRow(new Object[]{unity_price,product_name,product_id,category_id});
                }
                }
}
catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "A connection could not be made with the Database. \nPlease check your connectivity or contact the system administrator.");
            //System.out.println("An error occurred. Maybe user/password is invalid");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void hActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hActionPerformed
this.setVisible(false);
        new Home().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_hActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton h;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}